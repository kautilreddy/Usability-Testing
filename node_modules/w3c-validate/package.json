{
  "name": "w3c-validate",
  "version": "0.0.2",
  "main": "./lib/w3c-validate",
  "engines": {
    "node": ">= 0.6.14"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/busbud/w3c-validate.git"
  },
  "dependencies": {
    "superagent": ">= 0.12.1",
    "underscore": "~1.4.3"
  },
  "devDependencies": {
    "chai": "~1.4.2",
    "mocha": "~1.8.1"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --reporter spec --bail"
  },
  "keywords": [
    "w3c",
    "validator",
    "html",
    "html5"
  ],
  "license": "http://unlicense.org/",
  "readme": "# w3c-validate\n\nA node.js library for testing web responses against the w3c html validator.\nInspired by [w3cjs](https://github.com/thomasdavis/w3cjs), but based purely on buffers.\n\nUse with your tests.\n\n[![Build Status](https://travis-ci.org/busbud/w3c-validate.png?branch=master)](https://travis-ci.org/busbud/w3c-validate)\n\n\n## Installation\n\n```js\nnpm install w3c-validate\n```\n\n## Usage\n\n```js\nvar w3c = require('w3c-validate').createValidator();\n\nw3c.validate('<html> ... </html>', function (err) {\n  if (err) {\n    console.error(err); // error includes [{message, context}] to help understand validation errors\n  } else {\n    console.log('Valid! Hurray!');\n  }\n});\n```\n\n## Example async testing with Mocha\n\n```js\nvar request = require('supertest')\n  , express = require('express')\n  , w3c     = require('w3c-validate').createValidator();\n\nvar app = express();\n\napp.get('/page', function(req, res){\n  res.send(200,\n    '<!DOCTYPE html>' +\n    '<html lang=\"en\">' +\n    '<head><title>Hello</title></head>' +\n    '<body>World</body>' +\n    '</html>');\n});\n\ndescribe('html validation', function(){\n  it('page should have no html errors', function(done){\n    request(app)\n      .get('/page')\n      .expect(200)\n      .end(function(err, res){\n        if (err) return done(err);\n        w3c.validate(res.text, done);\n      });\n  })\n})\n```\n\n### Ignoring errors\n\nSometimes, you'll have W3C Validation errors that you just want to ignore. Once you've identified the exact error message,\nyou can pass that to the factory method. The validator will ignore these.\n\n```js\nvar w3c = require('w3c-validate').createValidator([\n  'Attribute xmlns:fb not allowed here.'\n]);\n```\n\n# Running Tests\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n\n    npm install\n\nthen run the tests:\n\n    npm test",
  "readmeFilename": "README.md",
  "description": "A node.js library for testing web responses against the w3c html validator. Inspired by [w3cjs](https://github.com/thomasdavis/w3cjs), but based purely on buffers.",
  "bugs": {
    "url": "https://github.com/busbud/w3c-validate/issues"
  },
  "_id": "w3c-validate@0.0.2",
  "dist": {
    "shasum": "95644a82358d456534d767adf8bb3d6287714d3c",
    "tarball": "https://registry.npmjs.org/w3c-validate/-/w3c-validate-0.0.2.tgz"
  },
  "_from": "w3c-validate@latest",
  "_npmVersion": "1.2.30",
  "_npmUser": {
    "name": "cdnbacon",
    "email": "mike@busbud.com"
  },
  "maintainers": [
    {
      "name": "perropicante",
      "email": "perropicante@hotmail.com"
    },
    {
      "name": "cdnbacon",
      "email": "mike@busbud.com"
    }
  ],
  "directories": {},
  "_shasum": "95644a82358d456534d767adf8bb3d6287714d3c",
  "_resolved": "https://registry.npmjs.org/w3c-validate/-/w3c-validate-0.0.2.tgz",
  "homepage": "https://github.com/busbud/w3c-validate#readme"
}
